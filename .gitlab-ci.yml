image: node:8

stages:
  - build
  - test
  - deploy

cache:
  key: "$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME"
  untracked: true
  paths:
    - npm_cache/
    - node_modules/

before_script:
  - mv /etc/apt/sources.list /etc/apt/sources.list.bak
  - echo "deb http://mirrors.ustc.edu.cn/debian/ jessie main contrib non-free" > /etc/apt/sources.list
  - echo "deb http://mirrors.ustc.edu.cn/debian/ jessie-updates main contrib non-free" >> /etc/apt/sources.list
  - echo "deb http://mirrors.ustc.edu.cn/debian/ jessie-backports main contrib non-free" >> /etc/apt/sources.list
  - echo "deb http://mirrors.ustc.edu.cn/debian-security/ jessie/updates main contrib non-free" >> /etc/apt/sources.list
  - export NPM_CACHE_DIR=`pwd`/npm_cache
  - export NPM_PACKAGE_MD5=`md5sum package.json`
  - export NPM_PACKAGE_MD5_FILE=./node_modules/${NPM_PACKAGE_MD5}.md5
  - export PHANTOMJS_CDNURL=https://npm.taobao.org/dist/phantomjs
  - npm config set cache ${NPM_CACHE_DIR} --global
  - npm config set strict-ssl false
  - npm config set registry "https://registry.npm.taobao.org"

build:
  stage: build
  script:
    - if [ -f $NPM_PACKAGE_MD5_FILE ];
      then
        npm install --progress=false;
      else
        rm -rf ./node_modules;
        npm install --progress=false;
        touch ./node_modules/${PACKAGE_HASH}.md5;
      fi
    - npm run build
  artifacts:
    expire_in: 1 week
    paths:
      - dist

test:
  stage: test
  script:
    - npm run unit

deploy:
  stage: deploy
  only:
    - master
  script:
    - apt-get update -yq
    - apt-get install -yq apt-transport-https ca-certificates curl gnupg2 software-properties-common
    - curl -fsSL http://mirrors.ustc.edu.cn/docker-ce/linux/debian/gpg | apt-key add -
    - add-apt-repository "deb [arch=amd64] http://mirrors.ustc.edu.cn/docker-ce/linux/debian/ $(lsb_release -cs) stable"
    - apt-get update -yq
    - apt-get install -yq docker-ce
    - npm run build:docker
    - npm run push:docker
